apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'signing'

group = 'de.hhu.stups'
version = '5.1.0'

buildscript {
    repositories {
        mavenCentral()
    }
}

allprojects {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

task jflex(type: JavaExec) {
    inputs.files("src/main/java/edu/mit/csail/sdg/parser/Alloy.lex")
    outputs.files("src/main/java/edu/mit/csail/sdg/parser/CompLexer.java")

    classpath file( '../cnf/jars/JFlex.jar' )
    main = 'JFlex.Main'
    args ("-d","src/main/java/edu/mit/csail/sdg/parser","-nobak","src/main/java/edu/mit/csail/sdg/parser/Alloy.lex")
}

task cup(type: JavaExec ) {

    inputs.files("src/main/java/edu/mit/csail/sdg/parser/Alloy.cup")
    outputs.files("src/main/java/edu/mit/csail/sdg/parser/CompParser.java", "src/main/java/edu/mit/csail/sdg/parser/CompSym.java")

    classpath file( '../cnf/jars/java-cup-11a.jar' )
    main = 'java_cup.Main'
    workingDir( "src/main/java/edu/mit/csail/sdg/parser")
    args(
            "-parser", "CompParser",
            "-symbols", "CompSym",
            "-progress",
            "-time",
            "-compact_red",
            "Alloy.cup")
}
compileJava.dependsOn(jflex)
compileJava.dependsOn(cup)
cup.dependsOn(jflex)

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'alloy-core'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Alloy Core'
                description = 'The core of the Alloy tools'
                url = 'https://github.com/hhu-stups/org.alloytools.alloy'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'JoshuaAtSTUPS'
                        name = 'Joshua Schmidt'
                        email = 'joshua.schmidt@hhu.de'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/hhu-stups/org.alloytools.alloy/tree/master/org.alloytools.alloy.core'
                    developerConnection = 'scm:git:ssh://github.com/hhu-stups/org.alloytools.alloy/tree/master/org.alloytools.alloy.core'
                    url = 'http://github.com/hhu-stups/org.alloytools.alloy/tree/master/org.alloytools.alloy.core'
                }
            }
        }
    }
    repositories {
        maven {
            url 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}


javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}