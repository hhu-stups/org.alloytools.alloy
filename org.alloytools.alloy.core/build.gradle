plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

project.group = "de.hhu.stups"
project.version = "6.2.0-SNAPSHOT"

final isSnapshot = project.version.endsWith("-SNAPSHOT")

repositories {
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17

    withSourcesJar()
    withJavadocJar()
}

sourcesJar {
    mustRunAfter "generate"
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

javadoc {
    failOnError = false
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'alloy-core'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Alloy Core'
                description = 'The core of the Alloy tools'
                url = 'https://github.com/hhu-stups/org.alloytools.alloy'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'JoshuaAtSTUPS'
                        name = 'Joshua Schmidt'
                        email = 'joshua.schmidt@hhu.de'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/hhu-stups/org.alloytools.alloy/tree/master/org.alloytools.alloy.core'
                    developerConnection = 'scm:git:ssh://github.com/hhu-stups/org.alloytools.alloy/tree/master/org.alloytools.alloy.core'
                    url = 'http://github.com/hhu-stups/org.alloytools.alloy/tree/master/org.alloytools.alloy.core'
                }
            }
        }
    }

    repositories {
        maven {
            final releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            final snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url isSnapshot ? snapshotsRepoUrl : releasesRepoUrl
            if (project.hasProperty("ossrhUsername") && project.hasProperty("ossrhPassword")) {
                credentials {
                    username project.ossrhUsername
                    password project.ossrhPassword
                }
            }
        }
    }
}

ext."signing.secretKeyRingFile" = project.file("secring.gpg").absolutePath

signing {
    sign publishing.publications.mavenJava
}